#!/usr/bin/env python3
"""
üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ AML —Å–∏—Å—Ç–µ–º—ã
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys
import time
import subprocess
from pathlib import Path

def main():
    print("üöÄ –ë–´–°–¢–†–´–ô –ó–ê–ü–£–°–ö AML –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files = [
        'aml_unified_launcher.py',
        'aml-backend/app.py',
        'aml-monitoring-frontend/package.json'
    ]
    
    missing_files = []
    for file_path in required_files:
        if not Path(file_path).exists():
            missing_files.append(file_path)
    
    if missing_files:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"   ‚Ä¢ {file}")
        return
    
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    node_modules = Path('aml-monitoring-frontend/node_modules')
    if not node_modules.exists():
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend...")
        try:
            subprocess.run(
                ['npm', 'install'],
                cwd='aml-monitoring-frontend',
                check=True,
                capture_output=True
            )
            print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except subprocess.CalledProcessError:
            print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
            return
    
    # –ó–∞–ø—É—Å–∫ –µ–¥–∏–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞
    print("\nüîß –ó–∞–ø—É—Å–∫ –µ–¥–∏–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞...")
    print("üì± Frontend: http://localhost:3000")
    print("üîó Backend API: http://localhost:5000")
    print("üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("-" * 50)
    
    try:
        subprocess.run([
            sys.executable, 'aml_unified_launcher.py'
        ])
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == "__main__":
    main()