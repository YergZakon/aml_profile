#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'aml-backend'))

from aml_integration_system import AMLDatabaseManager

def check_good_transactions():
    """–ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    db = AMLDatabaseManager('aml_system_e840b2937714940f.db')
    cursor = db.get_db_cursor()
    
    # –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    cursor.execute("""
        SELECT transaction_id, sender_name, beneficiary_name, amount_kzt, sender_id, beneficiary_id
        FROM transactions 
        WHERE beneficiary_name IS NOT NULL 
        AND beneficiary_name != '' 
        AND sender_name IS NOT NULL 
        AND sender_name != ''
        AND amount_kzt > 0
        LIMIT 10
    """)
    
    transactions = cursor.fetchall()
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(transactions)} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
    
    for i, row in enumerate(transactions, 1):
        print(f"\n{i}. ID: {row[0]}")
        print(f"   –û—Ç: {row[1]} ({row[4]})")
        print(f"   –ö–æ–º—É: {row[2]} ({row[5]})")
        print(f"   –°—É–º–º–∞: {row[3]:,.0f} KZT")
    
    if transactions:
        print(f"\n‚úÖ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é {transactions[0][0]} –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return transactions[0][0]
    else:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")
        return None

if __name__ == "__main__":
    check_good_transactions() 