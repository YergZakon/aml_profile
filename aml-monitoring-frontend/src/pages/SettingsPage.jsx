import React, { useState } from 'react';

const SettingsPage = () => {
  const [settings, setSettings] = useState({
    maxFileSize: 1000,
    notificationEmail: 'aml@bank.kz',
    autoReports: true,
    emailNotifications: true,
    transactionThreshold: 10000000,
    mediumRiskThreshold: 1000000,
    retentionPeriod: 2555
  });

  const [saved, setSaved] = useState(false);
  const [activeTab, setActiveTab] = useState('general');

  const saveSettings = () => {
    setSaved(true);
    setTimeout(() => setSaved(false), 3000);
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', settings);
  };

  const resetSettings = () => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?')) {
      setSettings({
        maxFileSize: 1000,
        notificationEmail: 'aml@bank.kz',
        autoReports: true,
        emailNotifications: true,
        transactionThreshold: 10000000,
        mediumRiskThreshold: 1000000,
        retentionPeriod: 2555
      });
    }
  };

  const tabs = [
    { id: 'general', label: '–û–±—â–∏–µ', icon: '‚öôÔ∏è' },
    { id: 'analysis', label: '–ê–Ω–∞–ª–∏–∑', icon: 'üîç' },
    { id: 'notifications', label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', icon: 'üìß' }
  ];

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white shadow rounded-lg p-6">
        <h1 className="text-2xl font-bold text-gray-900 mb-2">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h1>
        <p className="text-gray-600">–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</p>
      </div>

      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ */}
      {saved && (
        <div className="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
          ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!
        </div>
      )}

      {/* –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
      <div className="bg-white shadow rounded-lg">
        {/* –¢–∞–±—ã */}
        <div className="border-b border-gray-200">
          <nav className="-mb-px flex space-x-8 px-6">
            {tabs.map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap ${
                  activeTab === tab.id
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                <span className="mr-2">{tab.icon}</span>
                {tab.label}
              </button>
            ))}
          </nav>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–æ–≤ */}
        <div className="p-6">
          {/* –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
          {activeTab === 'general' && (
            <div className="space-y-6">
              <h3 className="text-lg font-medium text-gray-900">–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–ú–ë)
                  </label>
                  <input
                    type="number"
                    value={settings.maxFileSize}
                    onChange={(e) => setSettings({...settings, maxFileSize: parseInt(e.target.value)})}
                    className="w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                  <p className="text-xs text-gray-500 mt-1">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞</p>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ü–µ—Ä–∏–æ–¥ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–¥–Ω–∏)
                  </label>
                  <input
                    type="number"
                    value={settings.retentionPeriod}
                    onChange={(e) => setSettings({...settings, retentionPeriod: parseInt(e.target.value)})}
                    className="w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                  <p className="text-xs text-gray-500 mt-1">–°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞</p>
                </div>
              </div>
            </div>
          )}

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ */}
          {activeTab === 'analysis' && (
            <div className="space-y-6">
              <h3 className="text-lg font-medium text-gray-900">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞</h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ü–æ—Ä–æ–≥ –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∏—Å–∫–∞ (—Ç–µ–Ω–≥–µ)
                  </label>
                  <input
                    type="number"
                    value={settings.transactionThreshold}
                    onChange={(e) => setSettings({...settings, transactionThreshold: parseInt(e.target.value)})}
                    className="w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                  <p className="text-xs text-gray-500 mt-1">–°—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–∞–∫ –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫</p>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ü–æ—Ä–æ–≥ —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–∏—Å–∫–∞ (—Ç–µ–Ω–≥–µ)
                  </label>
                  <input
                    type="number"
                    value={settings.mediumRiskThreshold}
                    onChange={(e) => setSettings({...settings, mediumRiskThreshold: parseInt(e.target.value)})}
                    className="w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                  <p className="text-xs text-gray-500 mt-1">–°—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–∞–∫ —Å—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫</p>
                </div>
              </div>

              <div className="bg-blue-50 border border-blue-200 rounded-md p-4">
                <div className="flex">
                  <div className="flex-shrink-0">
                    <span className="text-blue-400">‚ÑπÔ∏è</span>
                  </div>
                  <div className="ml-3">
                    <h3 className="text-sm font-medium text-blue-800">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                    <div className="mt-2 text-sm text-blue-700">
                      <p>–ü–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Å–µ–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
          {activeTab === 'notifications' && (
            <div className="space-y-6">
              <h3 className="text-lg font-medium text-gray-900">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                </label>
                <input
                  type="email"
                  value={settings.notificationEmail}
                  onChange={(e) => setSettings({...settings, notificationEmail: e.target.value})}
                  className="w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-blue-500 focus:border-blue-500"
                  placeholder="email@afm.kz"
                />
                <p className="text-xs text-gray-500 mt-1">–ê–¥—Ä–µ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</p>
              </div>

              <div className="space-y-4">
                <div className="flex items-center">
                  <input
                    type="checkbox"
                    id="autoReports"
                    checked={settings.autoReports}
                    onChange={(e) => setSettings({...settings, autoReports: e.target.checked})}
                    className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                  />
                  <label htmlFor="autoReports" className="ml-2 block text-sm text-gray-900">
                    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
                  </label>
                </div>
                <p className="text-xs text-gray-500 ml-6">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ç—á–µ—Ç—ã –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞</p>

                <div className="flex items-center">
                  <input
                    type="checkbox"
                    id="emailNotifications"
                    checked={settings.emailNotifications}
                    onChange={(e) => setSettings({...settings, emailNotifications: e.target.checked})}
                    className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                  />
                  <label htmlFor="emailNotifications" className="ml-2 block text-sm text-gray-900">
                    Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                  </label>
                </div>
                <p className="text-xs text-gray-500 ml-6">–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö</p>
              </div>
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-between">
          <button
            onClick={resetSettings}
            className="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors"
          >
            –°–±—Ä–æ—Å–∏—Ç—å –∫ —É–º–æ–ª—á–∞–Ω–∏—é
          </button>
          
          <div className="space-x-3">
            <button
              onClick={saveSettings}
              className="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
            >
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="bg-white shadow rounded-lg p-6">
        <h3 className="text-lg font-medium text-gray-900 mb-4">–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="bg-gray-50 p-4 rounded-lg">
            <div className="text-sm font-medium text-gray-500">–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã</div>
            <div className="text-lg font-semibold text-gray-900">1.0.0</div>
          </div>
          <div className="bg-gray-50 p-4 rounded-lg">
            <div className="text-sm font-medium text-gray-500">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</div>
            <div className="text-lg font-semibold text-gray-900">26.01.2024</div>
          </div>
          <div className="bg-gray-50 p-4 rounded-lg">
            <div className="text-sm font-medium text-gray-500">–°—Ç–∞—Ç—É—Å</div>
            <div className="text-lg font-semibold text-green-600">–ê–∫—Ç–∏–≤–Ω–∞</div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SettingsPage; 