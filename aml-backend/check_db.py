import sqlite3
import os

def check_database():
    db_path = 'aml_system.db'  # –ò–∑–º–µ–Ω—è–µ–º –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db_path} –Ω–∞–π–¥–µ–Ω–∞")
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        
        print(f"\nüìä –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ({len(tables)} —à—Ç.):")
        for table in tables:
            table_name = table[0]
            print(f"- {table_name}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ
            try:
                cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
                count = cursor.fetchone()[0]
                print(f"  –ó–∞–ø–∏—Å–µ–π: {count:,}")
            except Exception as e:
                print(f"  –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –∫–ª–∏–µ–Ω—Ç—ã (–ø—Ä–æ–≤–µ—Ä–∏–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü)
        client_tables = ['customer_profiles', 'clients', 'customers']
        clients_count = 0
        
        for table_name in client_tables:
            try:
                cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
                clients_count = cursor.fetchone()[0]
                print(f"\nüè¢ –ö–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ {table_name}: {clients_count:,}")
                
                if clients_count > 0:
                    # –ü–æ–ª—É—á–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
                    cursor.execute(f"SELECT * FROM {table_name} LIMIT 3")
                    columns = [description[0] for description in cursor.description]
                    sample_clients = cursor.fetchall()
                    
                    print(f"\nüë• –ü—Ä–∏–º–µ—Ä—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ {table_name}:")
                    print(f"–°—Ç–æ–ª–±—Ü—ã: {', '.join(columns)}")
                    for i, client in enumerate(sample_clients, 1):
                        print(f"{i}. {client}")
                break
            except Exception:
                continue
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    check_database() 