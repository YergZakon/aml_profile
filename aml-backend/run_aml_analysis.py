#!/usr/bin/env python3
"""
üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ AML-–∞–Ω–∞–ª–∏–∑–∞
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
"""

from aml_pipeline import AMLPipeline
import sys

def quick_analysis():
    """–ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤"""
    print("üöÄ –ë–´–°–¢–†–´–ô AML-–ê–ù–ê–õ–ò–ó")
    print("=" * 30)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–∞–π–ø–ª–∞–π–Ω
        pipeline = AMLPipeline('aml_system.db')
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        result = pipeline.run_full_analysis()
        
        if result.get('success'):
            print()
            print("üéâ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
            stats = result['stats']
            print(f"‚ö° {stats['total_clients']:,} –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞ {stats['analysis_time']:.3f} —Å–µ–∫")
            print(f"üî¥ –ù–∞–π–¥–µ–Ω–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö: {stats['suspicious_clients']:,}")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = quick_analysis()
    sys.exit(0 if success else 1) 